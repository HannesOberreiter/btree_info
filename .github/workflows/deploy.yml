# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Use Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'    
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install
      run: npm install
    - name: Generate
      run: npm run generate
    - name: List output files
      run: ls

    # deploy our code
    - name: Deploy LFTP
      uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
      with:
        ftp_host:     ${{ secrets.FTP_HOST }}
        ftp_username: ${{ secrets.FTP_USERNAME }}
        ftp_password: ${{ secrets.FTP_PASSWORD }}
        local_source_dir: dist
        dist_target_dir: .
        delete: "false"
        only_newer: "false"
        ignore_time: "false"

    # clear AWS cache
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    
    - name: Clear AWS Cloudfront Cache
      run: |
        aws cloudfront create-invalidation --distribution-id E1JDNEUJJ3YVS8 --paths "/*"